// In God We Trust
/*! Compressed with: @aspiesoft/miniforge-js v1.0.0 | (c) aspiesoftweb@gmail.com */
!function(){!function(e){let c;for(let o=0;o<e.length;o++)try{c=require(e[o]);break}catch(e){}}(["fs-extra","fs"]);const e=function(e,c){try{return require(e)}catch(c){console.error(__dirname,"requires the",e,"module to be installed so it can","decompress","itself")}}("zlib");if(!e)return void(module.exports=void 0);let c="",o=__filename;if(c=function(c){if(c)try{compressed=Buffer.from(c,"base64");let o=e.inflateSync(compressed);return o=o.toString(),o&&""!==o.trim()?o:null}catch(e){return null}}(c),!c)return void console.error(o,"failed to decompress");
/*! Runs with: require-from-string v2.0.2 | (c) Vsevolod Strukchinsky <floatdrop@gmail.com> (github.com/floatdrop) */const n=function(){const e=require("module"),c=require("path");return function(o,n,t){if("object"==typeof n&&(t=n,n=void 0),n=n||"",(t=t||{}).appendPaths=t.appendPaths||[],t.prependPaths=t.prependPaths||[],"string"!=typeof o)throw new Error("code must be a string, not "+typeof o);var a=e._nodeModulePaths(c.dirname(n)),m=module.parent,u=new e(n,m);u.filename=n,u.paths=[].concat(t.prependPaths).concat(a).concat(t.appendPaths),u._compile(o,n);var r=u.exports;return m&&m.children&&m.children.splice(m.children.indexOf(u),1),r}}();module.exports=n(c,o)}();
